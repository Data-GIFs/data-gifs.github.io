{"version":3,"sources":["css/Home.module.scss","css/Space.module.scss","css/Study.module.scss","css/Navigation.module.scss","css/App.module.scss","component/Navigation.js","component/store/reducers.js","component/store/store.js","component/Home.js","component/Space.js","component/Study.js","component/App.js","index.js"],"names":["module","exports","Navigation","props","switchPage","i","setState","selected","onSwitchPage","toggleDrawer","open","event","type","key","openMenu","showMenu","className","style","menuMobile","role","onClick","onKeyDown","menuCancel","IconButton","color","option","bind","state","optionSelected","atTop","screenWidth","document","documentElement","clientWidth","_this","this","window","addEventListener","scrollY","classes","container","head","headBg","logo","menu","banner","bg","title","Drawer","anchor","onClose","paperAnchorRight","React","Component","withStyles","theme","backgroundColor","width","defaultState","reducers","newState","JSON","parse","stringify","store","createStore","useStylesBootstrap","makeStyles","arrow","palette","common","black","tooltip","fontSize","BootstrapTooltip","Tooltip","Home","renderGIFs","cards","getState","Fragment","map","card","index","Card","root","url","id","position","onMouseEnter","showFullScreenIcon","onMouseLeave","hideFullScreenIcon","CardMedia","component","image","fullscreen","display","anchorEl","openDialog","Dialog","closeDialog","BackdropProps","backdrop","paper","dialogPaper","DialogTitle","disableTypography","dialogTitle","gif","DialogContent","dialogContent","CardContent","cardContent","placement","href","source","author","currentTarget","idx","intro","def","name","link","publication","left","height","src","frameBorder","allow","allowFullScreen","right","journal","gallery","subtitle","marginBottom","marginTop","padding","paddingBottom","bottom","boxShadow","fontWeight","DisplayGIF","value","exampleImg","DisplayChoice","choice","icon","desc","toUpperCase","tag","definition","example","Space","handleClick","current","space","content","options","paddingLeft","factor","optSelected","opt","length","quote","Suggestion","suggestion","Study","suggestions","sugg","App","body","scrollTop","pages","renderPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d25d7a2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2TRla\",\"intro\":\"Home_intro__3DpNb\",\"def\":\"Home_def__3cFPZ\",\"name\":\"Home_name__1Ctgf\",\"link\":\"Home_link__3LI6f\",\"publication\":\"Home_publication__3OURQ\",\"left\":\"Home_left__29yuT\",\"right\":\"Home_right__OGEhN\",\"paper\":\"Home_paper__1Lb3j\",\"journal\":\"Home_journal__3piO5\",\"author\":\"Home_author__8ffRk\",\"gallery\":\"Home_gallery__b4E-K\",\"title\":\"Home_title__2wHkH\",\"subtitle\":\"Home_subtitle__3Y9P5\",\"cards\":\"Home_cards__1qxLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Space_container__SkCKj\",\"choice\":\"Space_choice__1RSi5\",\"icon\":\"Space_icon__1DEdp\",\"exampleImg\":\"Space_exampleImg__Zo03E\",\"options\":\"Space_options__1g75k\",\"opt\":\"Space_opt__Ddpxw\",\"optSelected\":\"Space_optSelected__1PpRa\",\"content\":\"Space_content__1BY2i\",\"intro\":\"Space_intro__2jIXD\",\"name\":\"Space_name__19Rah\",\"quote\":\"Space_quote__3GJss\",\"desc\":\"Space_desc__2daCj\",\"title\":\"Space_title__2dZrL\",\"tag\":\"Space_tag__2s8df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Study_container__O2IHw\",\"suggestion\":\"Study_suggestion__3I-kN\",\"icon\":\"Study_icon__3T5Rr\",\"intro\":\"Study_intro__1sJ3A\",\"content\":\"Study_content__2UNEr\",\"desc\":\"Study_desc__2jHf6\",\"title\":\"Study_title__35Zwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navigation_container__2iWiE\",\"head\":\"Navigation_head__2nnMh\",\"headBg\":\"Navigation_headBg__oLSZO\",\"logo\":\"Navigation_logo__2KIkJ\",\"menu\":\"Navigation_menu__3kQkz\",\"option\":\"Navigation_option__YHEDR\",\"optionSelected\":\"Navigation_optionSelected__3UsNp\",\"banner\":\"Navigation_banner__2I9g8\",\"bg\":\"Navigation_bg__ILAnM\",\"title\":\"Navigation_title__3JBcw\",\"menuMobile\":\"Navigation_menuMobile__2qBHp\",\"menuCancel\":\"Navigation_menuCancel__20i56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Owaw\"};","import React from 'react'\nimport style from '../css/Navigation.module.scss'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    paperAnchorRight: {\n        backgroundColor: '#4F474E',\n        width: '60vw'\n    }\n})\n\nclass Navigation extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            selected: 0,\n            atTop: true,\n            screenWidth: document.documentElement.clientWidth,\n            openMenu: false,\n        }\n    }\n\n    componentDidMount() {\n        let _this = this;\n        //scrollbar listener\n        window.addEventListener('scroll', function () {\n            // is at top\n            if (window.scrollY === 0) {\n                _this.setState({ atTop: true });\n            } \n            else { // not at top\n                // first scroll down\n                if (_this.state.atTop === true) {\n                    _this.setState({ atTop: false });\n                }\n            }\n        });\n        window.addEventListener('resize', function(){\n            _this.setState({ screenWidth: document.documentElement.clientWidth})\n        })\n    }\n\n    switchPage = (i) => {\n        this.setState({selected: i})\n        this.props.onSwitchPage(i)\n    }\n\n    toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        this.setState({openMenu: open})\n    }\n\n    showMenu = () => {\n        return (\n            <div className={style.menuMobile} role=\"presentation\" onClick={this.toggleDrawer(false)} onKeyDown={this.toggleDrawer(false)}>\n                <div className={style.menuCancel}>\n                    <IconButton onClick={this.toggleDrawer(false)}>\n                        <CloseIcon style={{ color: \"white\" }} />\n                    </IconButton>\n                </div>\n\n                <div className={style.option} onClick={this.switchPage.bind(this, 0)}>\n                    <span className={this.state.selected === 0 ? style.optionSelected : 'none'}>Gallery</span>\n                </div>\n                <div className={style.option} onClick={this.switchPage.bind(this, 1)}>\n                    <span className={this.state.selected === 1 ? style.optionSelected : 'none'}>Design Space</span>\n                </div>\n                <div className={style.option} onClick={this.switchPage.bind(this, 2)}>\n                    <span className={this.state.selected === 2 ? style.optionSelected : 'none'}>Design Suggestion</span>\n                </div>\n        </div>\n        \n    )}\n\n    render() {\n        const classes = this.props.classes\n\n        // responsive: in large-screen\n        if(this.state.screenWidth > 600) {\n            return (\n                <div className={style.container}>\n                    {/* navigation */}\n                    <div className={this.state.atTop ? style.head : style.headBg}>\n                        <div className={style.logo} onClick={this.switchPage.bind(this, 0)}>Data-GIF</div>\n                        <div className={style.menu}>\n                            <div className={this.state.selected === 0 ? style.optionSelected : style.option} onClick={this.switchPage.bind(this, 0)}>Gallery</div>\n                            <div className={this.state.selected === 1 ? style.optionSelected : style.option} onClick={this.switchPage.bind(this, 1)}>Design Space</div>\n                            <div className={this.state.selected === 2 ? style.optionSelected : style.option} onClick={this.switchPage.bind(this, 2)}>Design Suggestion</div>\n                        </div>\n                    </div>\n\n                    {/* banner */}\n                    <div className={style.banner}>\n                        <div className={style.bg}>\n                            <div className={style.title}>\n                                Data-GIF\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            ) \n        }\n        // responsive: in small-screen\n        else {\n            const anchor = 'right'\n            return (\n                <div className={style.container}>\n                    {/* navigation */}\n                    <div className={this.state.atTop ? style.head : style.headBg}>\n                        <div className={style.logo} onClick={this.switchPage.bind(this, 0)}>Data-GIF</div>\n                        <IconButton onClick={this.toggleDrawer(true)}>\n                            <MenuIcon style={{ color: \"white\" }} />\n                        </IconButton>\n                        <Drawer anchor={anchor} open={this.state.openMenu} onClose={this.toggleDrawer(false)} classes={{ paperAnchorRight: classes.paperAnchorRight }} >\n                            {this.showMenu()}\n                        </Drawer>\n                    </div>\n\n                    {/* banner */}\n                    <div className={style.banner}>\n                        <div className={style.bg}>\n                            <div className={style.title}>\n                                Data-GIF\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            ) \n        }\n    }\n}\n\nexport default withStyles(styles)(Navigation)","const defaultState = {\n    \"gallery\": [\n        {\n            \"title\": \"How the Coronavirus spread across America?\",\n            \"source\": \"https://twitter.com/nytimes/status/1241387140933652481\",\n            \"url\": \"acrossUSA\",\n            \"author\": \"New York Times\"\n        },\n        {\n            \"title\": \"Which countries have flattened the curve for the coronavirus?\",\n            \"source\": \"https://twitter.com/nytimes/status/1240790201414438912\",\n            \"url\": \"virusCurve\",\n            \"author\": \"New York Times\"\n        },\n        {\n            \"title\": \"Global temperature Changes\",\n            \"source\": \"https://twitter.com/ed_hawkins/status/729753441459945474?lang=en\",\n            \"url\": \"GlobalTemperature\",\n            \"author\": \"Ed Hawkins\"\n        },\n        {\n            \"title\": \"Americans are growing bigger\",\n            \"source\": \"https://flowingdata.com/2016/06/14/growing-to-obesity/\",\n            \"url\": \"biggerAmerican\",\n            \"author\": \"Flowing Data\"\n        },\n        {\n            \"title\": \"The shape-shifting US income distribution\",\n            \"source\": \"https://twitter.com/FT/status/674759218545717252\",\n            \"url\": \"middleClass\",\n            \"author\": \"Financial Times\"\n        },\n        {\n            \"title\": \"The difference between men and women populations by age\",\n            \"source\": \"https://i2.wp.com/flowingdata.com/wp-content/uploads/2018/10/male-female-bivariate-zeroed.gif?resize=670%2C420&ssl=1\",\n            \"url\": \"areaGender2\",\n            \"author\": \"Flowing Data\"\n        },\n        {\n            \"title\": \"The number of total cases in multiple countries\",\n            \"source\": \"https://wap.peopleapp.com/article/5210197/5111953\",\n            \"url\": \"virus\",\n            \"author\": \"People's Daily\"\n        },\n        {\n            \"title\": \"Manhattan work and sleep\",\n            \"source\": \"https://www.darkhorseanalytics.com/blog/breathing-city/\",\n            \"url\": \"breathingcity\",\n            \"author\": \"Joey Cherdarchuk\"\n        },\n        {\n            \"title\": \"Mesmerizing Migration: Watch 118 Bird Species Migrate Across A Map Of The Western Hemisphere\",\n            \"source\": \"https://www.allaboutbirds.org/mesmerizing-migration-watch-118-bird-species-migrate-across-a-map-of-the-western-hemisphere/\",\n            \"url\": \"birdTraces\",\n            \"author\": \"The Cornell Lab\"\n        },\n        {\n            \"title\": \"The Proliferation of Walmart\",\n            \"source\": \"https://twitter.com/toddrjones/status/1167112782124179456\",\n            \"url\": \"walmart\",\n            \"author\": \"Todd Jones\"\n        },\n        {\n            \"title\": \"The Fall And Rise Of U.S. Income Inequality\",\n            \"source\": \"https://twitter.com/galka_max/status/823778751079219201\",\n            \"url\": \"riseAndFall\",\n            \"author\": \"Planet Money\"\n        },\n        {\n            \"title\": \"Percent of US Population by Age Group\",\n            \"source\": \"http://twitpic.com/e0t7oo\",\n            \"url\": \"nextAmerica\",\n            \"author\": \"Pew Research Center\"\n        },\n    ],\n    \"space\": [\n        {\n            \"factor\": \"Animation Encoding\",\n            \"desc\": \"considers the information encoded by the GIF playing progress. The animation can be divided into temporal and non-temporal categories, due to the wide utilization of animation for tracking changes over time. We further extract three different types of animations in non-temporal data-GIFs, namely, faceting, narrative, and setup.\",\n            \"choices\": [\n                {\n                    \"type\": \"Temporal\",\n                    \"definition\": \"The majority of data-GIFs communicate temporal changes of a data set. One possible explanation might be that people naturally link the temporal context with the GIF playing progress, thereby resulting in a large number of data-GIFs in this category.\",\n                    \"icon\": \"temporal\",\n                    \"example\": \"temporal\",\n                },\n                {\n                    \"type\": \"Faceting\",\n                    \"definition\": \"Faceting GIFs are designed to show the facets of a data set in a series of frames respectively. For example, different data items are encoded in a set of frames regarding the same attribute for comparison, or different attributes of a data item are presented continuously to deliver complementary views.\",\n                    \"icon\": \"faceting\",\n                    \"example\": \"faceting\",\n                },\n                {\n                    \"type\": \"Narrative\",\n                    \"definition\": \"This type builds a narration during the animation, where it introduces problems, provides data contexts, and complements explanatory texts. Most are revealed in a step-by-step presentation, guiding viewers' attention along with the narrative through highlighting and annotating.\",\n                    \"icon\": \"narrative\",\n                    \"example\": \"narrative\",\n                },\n                {\n                    \"type\": \"Setup\",\n                    \"definition\": \"Setup GIFs animate the creation of a visualization. They only build the visualization scene but do not encode data by the animation process and speed.\",\n                    \"icon\": \"setup\",\n                    \"example\": \"setup\",\n                },\n            ]  \n        },\n        {\n            \"factor\": \"Context Preservation\",\n            \"desc\": \"examines techniques used in data-GIFs that help reveal the connection among frames and keep the reading progress contextualized, answering the question \\\"How can viewers track the previous data within a loop?\\\" The techniques are described regarding the extents, i.e., no context preserved, partial context preserved (baseline, trails, overview), and entire context preserved (long exposure).\",\n            \"choices\": [\n                {\n                    \"type\": \"No context preservation\",\n                    \"definition\": \"Most data-GIFs just play the animation straight through and do not preserve previous data, thus requiring the mental memory of viewers to follow the GIF.\",\n                    \"icon\": \"no\",\n                    \"example\": \"\",\n                },\n                {\n                    \"type\": \"Baseline\",\n                    \"definition\": \"Baseline designs freeze the content in the first frame of the loop as a baseline during the animation, thereby allowing for comparison with the later frames. Typically, it can directly preserve the first frame and adjust the opacity to alleviate clutter, and some even change the representation.\",\n                    \"icon\": \"baseline\",\n                    \"example\": \"baseline\",\n                },\n                {\n                    \"type\": \"Trails\",\n                    \"definition\": \"Trail designs track the data changes between consecutive frames with the GIF playing. It is similar to the superimposed trail variant of Rosling’s animation.\",\n                    \"icon\": \"trails\",\n                    \"example\": \"trails\",\n                },\n                {\n                    \"type\": \"Overview\",\n                    \"definition\": \"This type incorporates an overview frame in the GIF frame sequence, which presents a summary of data. For example, the gray points shown from the beginning foreshow the upcoming points and guide the anticipation of the viewers.\",\n                    \"icon\": \"overview\",\n                    \"example\": \"overview\",\n                },\n                {\n                    \"type\": \"Long exposure\",\n                    \"definition\": \"This naming is borrowed from the term in photography, which retains information from previous frames. In data-GIFs, long exposure overlays data from all previous frames on the current frame with the GIF playing. For example, the colored line is growing spirally, and the new growth overlays on the previous one.\",\n                    \"icon\": \"longexposure\",\n                    \"example\": \"longexposure\",\n                },\n            ]\n        },\n        {\n            \"factor\": \"Repetition\",\n            \"desc\": \"considers \\\"what happens after the GIF is played once?\\\" Since GIFs are particularly featured with automatic repetition, we examine how the between-loop design can influence the reading experience of viewers.\",\n            \"choices\": [\n                {\n                    \"type\": \"Loop\",\n                    \"definition\": \"Most data-GIFs do not have obvious designs that enable viewers to identify the end or the start of a certain loop. They just directly start a new loop once the last loop ends, while several transition from the end of the last loop to the start of the new loop, completing a seamless transition between two consecutive loops.\",\n                    \"icon\": \"loop\",\n                    \"example\": \"loop\",\n                },\n                {\n                    \"type\": \"Pause\",\n                    \"definition\": \"Some data-GIFs deliberately pause a while before starting the new loop, thus forming a \\\"freeze\\\" of the last frame. This technique helps viewers to clearly identify each repetition.\",\n                    \"icon\": \"pause\",\n                    \"example\": \"pause\",\n                },\n                {\n                    \"type\": \"Bounce\",\n                    \"definition\": \"Bouncing GIFs play the animation once and then reverse it to the start state of the loop. It works similarly to tracing back the history.\",\n                    \"icon\": \"bounce\",\n                    \"example\": \"bounce\",\n                }\n            ]\n        },\n        {\n            \"factor\": \"Narrative Progress\",\n            \"desc\": \"describes how viewers identify the current playback progress.\",\n            \"choices\": [\n                {\n                    \"type\": \"Narrative progress\",\n                    \"definition\": \"Some data-GIFs incorporate designs of narrative progress within each frame. For example, they directly uses a timeline to showcase the progress or provide a supplementary chart to indicate the progress over time.\",\n                    \"icon\": \"with\",\n                    \"example\": \"overview\",\n                },\n                {\n                    \"type\": \"None\",\n                    \"definition\": \"Most GIFs do not provide obvious narrative progress designs, thus requiring viewers to perceive the playback progress themselves. This could be difficult especially under the scenario of automatic repetition.\",\n                    \"icon\": \"without\",\n                    \"example\": \"\",\n                },\n            ]\n        },\n    ],\n    'suggestions': [\n        {\n            \"title\": \"Use animation to convey temporal process\",\n            \"desc\": \"Animation in data-GIFs is used to convey different meanings, e.g., temporal, faceting, narrative, and setup. Viewers tend to conflate frames with time, even for non-temporal GIFs, such as regarding narrative as a presentation over time.Meanwhile, despite the similar accuracy between faceting and temporal, viewers feel more confident to follow a temporal data-GIF.\",\n            \"icon\": \"temporal\"\n        },\n        {\n            \"title\": \"Preserve context\",\n            \"desc\": \"Preserving previous data visually supports the comparison and identification of subtle trends. However, inappropriate context preservation may cause visual clutter and bring extra cognition pressure that lowers the understandability. A suggestion is to carefully consider the context preservation design regarding the data features and intention of the GIF.\",\n            \"icon\": \"trails\"\n        },\n        {\n            \"title\": \"Leverage the end frame via a pause\",\n            \"desc\": \"Viewers generally attach importance to the end frame (e.g., they expect obvious prompts for the end of the repetition and appreciate the pause at the end). Although the online study shows that the pause may not improve the understandability, it does not indicate the uselessness of the end frame. It instead requires a careful design to make pause valuable. An idea to leverage the end frame of a GIF is to subsume important information (e.g., previous data or take-home messages) and make it memorable.\",\n            \"icon\": \"pause\"\n        },\n        {\n            \"title\": \"Incorporate narrative progress\",\n            \"desc\": \"Integrating the narrative progress design provides the preview and orientation within the GIF. Although the results do not show a significant effect on the understandability of data-GIFs, viewers express the preference of narrative progress that helps the understanding. In addition, elaborate narrative progress can also help present the climax (e.g., showing a significant progress can ignite emotions).\",\n            \"icon\": \"with\"\n        },\n        {\n            \"title\": \"Structure visual content carefully\",\n            \"desc\": \"Viewers' perception of data-GIFs present a similarity, i.e., guess-first, details on demand. They will guess the meaning of animation at first glance and formulate an understanding of what they have seen, since animation quickly grabs their attention. Then, they will try to examine text and legends. If the initial guess confirms, they are likely to begin an active exploration; otherwise, they will struggle. Thus, a possible suggestion is to shape data-GIFs in a clear structure that supports a rapid reading and understanding.\",\n            \"icon\": \"structure\"\n        }\n    ]\n}\n\nconst reducers = (state = defaultState, action) => {\n    const newState = JSON.parse(JSON.stringify(state))\n    return newState\n}\n\nexport default reducers","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nlet store = createStore(reducers)\nexport default store","import React from 'react'\nimport style from '../css/Home.module.scss'\nimport store from './store/store'\nimport { Card, CardContent, CardMedia, Tooltip } from '@material-ui/core'\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\n\n\nconst styles = theme => ({\n    root: {\n        width: 300,\n        marginBottom: 10,\n        marginTop: 10,\n    },\n    cardContent: {\n        padding: 8,\n        \"&:last-child\": {\n            paddingBottom: 0,\n        }\n    },\n    fullscreen: {\n        color: 'white',\n        fontSize: '2em',\n        backgroundColor: 'rgb(51, 51, 51, 0.75)',\n        position: 'absolute',\n        right: '0.5em',\n        bottom: '0.5em'\n    },\n    backdrop: {\n        backgroundColor:'rgba(0,0,0,0.2)'\n    },\n    dialogPaper: {\n        boxShadow:'none',\n    },\n    dialogTitle: {\n        padding: '10px 16px',\n        fontSize: '1.2em',\n        fontWeight: 600,\n        backgroundColor: 'rgb(76, 178, 193)',\n        color: 'white',\n    },\n    dialogContent: {\n        padding: 8,\n    }\n})\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n        fontSize: 13,\n    },\n}))\nfunction BootstrapTooltip(props) {\n    const classes = useStylesBootstrap();\n    return <Tooltip arrow classes={classes} {...props}/>;\n}\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            anchorEl: '',\n            gif: {},\n            openDialog: false,\n        }\n    }\n    \n\n    renderGIFs = () => {\n        const classes = this.props.classes\n        const cards = store.getState()['gallery']\n        return (\n            <React.Fragment>\n                {cards.map((card, index) => (\n                    <Card className={classes.root} key={card.url}>\n                        <div id={card.url} style={{ position: 'relative' }} onMouseEnter={this.showFullScreenIcon} onMouseLeave={this.hideFullScreenIcon}>\n                            <CardMedia\n                                component=\"img\"\n                                image={'corpus/' + card.url+'.gif'}\n                            />\n                            <FullscreenIcon className={classes.fullscreen} style={{ display: this.state.anchorEl === card.url ? 'inline' : 'none' }} onClick={this.openDialog.bind(this, index)} />\n                            <Dialog open={this.state.openDialog} onClose={this.closeDialog} BackdropProps={{className: classes.backdrop}} classes={{paper: classes.dialogPaper}}>\n                                <DialogTitle disableTypography className={classes.dialogTitle}>{this.state.gif['title']}</DialogTitle>\n                                <DialogContent className={classes.dialogContent}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={'corpus/' + this.state.gif['url'] + '.gif'}\n                                    />\n                                </DialogContent>\n                            </Dialog>\n                        </div>\n                        <CardContent className={classes.cardContent}>\n                                <p className={style.title}>\n                                <BootstrapTooltip title=\"Click to see the source\" placement=\"top\">\n                                    <a href={card.source}>{card.title}</a>\n                                </BootstrapTooltip>\n                                </p>\n                            <p className={style.author}>\n                                &copy; {card.author}\n                            </p>\n                        </CardContent>\n                    </Card>\n                ))}\n            </React.Fragment>\n        )  \n    }\n\n    showFullScreenIcon = (event) => {\n        this.setState({ anchorEl: event.currentTarget.id})\n    }\n\n    hideFullScreenIcon = () => {\n        this.setState({ anchorEl: '' })\n    }\n\n    openDialog = (idx) => {\n        this.setState({ openDialog: true, gif: store.getState()['gallery'][idx] })\n    }\n\n    closeDialog = () => {\n        this.setState({ openDialog: false, gif: {} })\n    }\n\n    render() {\n        return (\n            <div className={style.container}>\n                <div className={style.intro}>\n                    <div className={style.def}>\n                        <span className={style.name}>Data-GIFs</span>\n                        <span>\n                            &nbsp; are enjoying increasing popularity on social media as a format for data-driven storytelling with visualization; simple visual messages are embedded in short animations that usually last less than 15 seconds and are played in automatic repetition. This site lists representative data-GIF examples we collected online and presents a design space of data-GIFs.\n                        </span>\n                        <p>\n                            If you are interested in data-GIFs, get in touch with us. If you want to know more about research, see our <a className={style.link} href='http://arxiv.org/abs/2008.07227'>paper</a>.\n                        </p>\n                    </div>\n                </div>\n\n                <div className={style.publication}>\n                    <div className={style.left}>\n                        <iframe width=\"100%\" height=\"270px\" src=\"https://www.youtube.com/embed/PFLrrK_4jj0\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className={style.right}>\n                        <p className={style.paper}>\n                            <a href='http://arxiv.org/abs/2008.07227'>What Makes a Data-GIF Understandable?</a>\n                        </p>\n                        <p className={style.journal}>\n                            IEEE Transactions on Visualization and Computer Graphics (InfoVis 2020)\n                        </p>\n                        <p className={style.author}>\n                            <a href='http://www.cse.ust.hk/~xshuaa/'>Xinhuan Shu</a>, <a href='http://awuac.student.ust.hk/'>Aoyu Wu</a>, <a href='https://ahugh19.github.io/'>Junxiu Tang</a>, <a href='https://visualinteractivedata.github.io/bach.html'>Benjamin Bach</a>, <a href='http://www.ycwu.org/'>Yingcai Wu</a>, <a href='http://huamin.org/'>Huamin Qu</a>\n                        </p>\n                    </div>\n                </div>\n                \n                <div className={style.gallery}>\n                    <div className={style.title}>\n                        <span>Data-GIF Gallery</span>\n                    </div>\n                    <div className={style.subtitle}>\n                        <a href=\"./gallery/index.html\">view the whole gallery &gt;&gt;</a>\n                    </div>\n                    <div className={style.cards}>\n                        {this.renderGIFs()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Home)","import React from 'react'\nimport style from '../css/Space.module.scss'\nimport store from './store/store'\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\n\n// click the example image to show the animated GIF\nfunction DisplayGIF(props) {\n    // const classes = this.props.classes\n    return (\n        <React.Fragment>\n            <img src={props.value} className={style.exampleImg} />\n            {/* <FullscreenIcon className={classes.fullscreen} style={{ display: this.state.anchorEl === card.url ? 'inline' : 'none' }} onClick={this.openDialog.bind(this, index)} /> */}\n            {/* <Dialog open={this.state.openDialog} onClose={this.closeDialog} BackdropProps={{ className: classes.backdrop }} classes={{ paper: classes.dialogPaper }}>\n                <DialogTitle disableTypography className={classes.dialogTitle}>{this.state.gif['title']}</DialogTitle>\n                <DialogContent className={classes.dialogContent}>\n                    <CardMedia\n                        component=\"img\"\n                        image={'corpus/' + this.state.gif['url'] + '.gif'}\n                    />\n                </DialogContent>\n            </Dialog> */}\n        </React.Fragment>\n    )   \n}\n\n// show each design choice\nfunction DisplayChoice(props) {\n    return (\n        <div className={style.choice}>\n            <div className={style.icon}>\n                <img src={'icon/' + props.value.icon + '.svg'}/>\n            </div>\n            <div className={style.desc}>\n                <p className={style.title}>{props.value.type.toUpperCase()}</p>\n                <p>\n                    <span className={style.tag}>Definition: </span>\n                    {props.value.definition}\n                </p>\n                {/* {props.value.example !== \"\" ? <img src={'example/' + props.value.example + '.png'} className={style.exampleImg} />: null} */}\n                {props.value.example !== \"\" ? <DisplayGIF value={'example/' + props.value.example + '.png'} /> : null}\n            </div>\n        </div>\n    )\n}\n\nclass Space extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            current: 0,\n            anchorEl: '',\n        }\n    }\n\n    handleClick = (idx) => {\n        this.setState({current: idx})\n    }\n\n    render() {\n        const space = store.getState()['space']\n        const content = space[this.state.current]\n        return (\n            <div className={style.container}>\n                {/* breadcrumbs navigation */}\n                <div className={style.options}>\n                    <ul style={{paddingLeft: '0px'}}>\n                        {space.map((factor, index) => ([\n                            <li key={index} \n                            className={this.state.current === index ? style.optSelected : style.opt}\n                            onClick={this.handleClick.bind(this, index)}>\n                                {factor.factor}\n                            </li>,\n                            index !== space.length - 1 ? \"/\" : \"\"]\n                        ))}\n                    </ul>\n                </div>\n                \n                {/* design space content */}\n                <div className={style.content}>\n                    <div className={style.intro}>\n                        <span className={style.quote}>\" </span>\n                        <span className={style.name}>{content.factor} </span>\n                        <span>{content.desc}</span>\n                        <span className={style.quote}>\"</span>\n                    </div>\n                    <div className={style.factor}>\n                        {content['choices'].map((choice, index) => (\n                            <DisplayChoice key={index} value={choice} />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Space","import React from 'react'\nimport style from '../css/Study.module.scss'\nimport store from './store/store'\n\nfunction Suggestion(props) {\n    return (\n        <div className={style.suggestion}>\n            <div className={style.icon}>\n                <img src={'icon/' + props.value.icon + '.svg'} />\n            </div>\n            <div className={style.desc}>\n                <p className={style.title}>{props.value.title.toUpperCase()}</p>\n                <p>\n                    {props.value.desc}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nclass Study extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const suggestions = store.getState()['suggestions']\n        return (\n            <div className={style.container}>\n                <div className={style.intro}>\n                    <span>To gain an understanding of what makes a data-GIF understandable to its audience, we conduct a qualitative study through semi-structured interviews, complemented by an extensive online study with with a total of 118 participants. We use a representative subset of 20 of our collected real-world GIFs in order to reduce the study’s complexity. The studies indicate that many design factors have an impact on the understandability of data-GIFs.</span>\n                    \n                    <p>This page presents a set of design suggestions for creating more effective data-GIFs which we derived from the results. Details about our experiments can be found in the <a href='http://arxiv.org/abs/2008.07227'>paper</a>. The study materials can be downloaded <a href=''>here</a>, including the stimuli GIFs and questionnaires for participants, as well as their responses.</p>\n                </div>\n\n                <div className={style.content}>\n                    {suggestions.map((sugg, index) => (\n                        <Suggestion key={index} value={sugg} />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Study","import React from 'react';\nimport style from '../css/App.module.scss';\nimport Navigation from './Navigation';\nimport Home from './Home';\nimport Space from './Space';\nimport Study from './Study';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      pages: [<Home/>, <Space/>, <Study/>]\n    };\n  }\n\n  switchPage = (index) => {\n    if (index !== this.state.current) {\n      this.setState({ current: index });\n      // scroll to top\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n  }\n  \n  renderPage() {\n    let current = this.state.current\n    return this.state.pages[current]\n  }\n\n  render() {\n    return (\n      <div className={style.container}>\n        <Navigation onSwitchPage={this.switchPage} />\n        {this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}